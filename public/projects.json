[
    {
      "id": 1,
      "title": "Calculator",
      "htmlCode": "<div class=\"calculator\">\n  <div class=\"input\" id=\"input\"></div>\n  <div class=\"buttons\">\n    <div class=\"operators\">\n      <div>+</div>\n      <div>-</div>\n      <div>&times;</div>\n      <div>&divide;</div>\n    </div>\n    <div class=\"leftPanel\">\n      <div class=\"numbers\">\n        <div>7</div>\n        <div>8</div>\n        <div>9</div>\n      </div>\n      <div class=\"numbers\">\n        <div>4</div>\n        <div>5</div>\n        <div>6</div>\n      </div>\n      <div class=\"numbers\">\n        <div>1</div>\n        <div>2</div>\n        <div>3</div>\n      </div>\n      <div class=\"numbers\">\n        <div>0</div>\n        <div>.</div>\n        <div id=\"clear\">C</div>\n      </div>\n    </div>\n    <div class=\"equal\" id=\"result\">=</div>\n  </div>\n</div>",
      "cssCode": "body {\n  width: 500px;\n  margin: 4% auto;\n  font-family: 'Source Sans Pro', sans-serif;\n  letter-spacing: 5px;\n  font-size: 1.8rem;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n}\n\n.calculator {\n  padding: 20px;\n  -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  border-radius: 1px;\n}\n\n.input {\n  border: 1px solid #ddd;\n  border-radius: 1px;\n  height: 60px;\n  padding-right: 15px;\n  padding-top: 10px;\n  text-align: right;\n  margin-right: 6px;\n  font-size: 2.5rem;\n  overflow-x: auto;\n  transition: all .2s ease-in-out;\n}\n\n.input:hover {\n  border: 1px solid #bbb;\n  -webkit-box-shadow: inset 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: inset 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n}\n\n.operators{\n width: 100%;\n}\n\n.operators div {\n  display: inline-block;\n  border: 1px solid #bbb;\n  border-radius: 1px;\n  width: 80px;\n  text-align: center;\n  padding: 10px;\n  margin: 20px 4px 10px 0;\n  cursor: pointer;\n  background-color: #ddd;\n  transition: border-color .2s ease-in-out, background-color .2s, box-shadow .2s;\n}\n\n.operators div:hover {\n  background-color: #ddd;\n  -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  border-color: #aaa;\n}\n\n.operators div:active {\n  font-weight: bold;\n}\n\n.leftPanel {\n  display: inline-block;\n}\n\n.numbers div {\n  display: inline-block;\n  border: 1px solid #ddd;\n  border-radius: 1px;\n  width: 80px;\n  text-align: center;\n  padding: 10px;\n  margin: 10px 4px 10px 0;\n  cursor: pointer;\n  background-color: #f9f9f9;\n  transition: border-color .2s ease-in-out, background-color .2s, box-shadow .2s;\n}\n\n.numbers div:hover {\n  background-color: #f1f1f1;\n  -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  border-color: #bbb;\n}\n\n.numbers div:active {\n  font-weight: bold;\n}\n\ndiv.equal {\n  display: inline-block;\n  border: 1px solid #3079ED;\n  border-radius: 1px;\n  width: 17%;\n  text-align: center;\n  padding: 127px 10px;\n  margin: 10px 6px 10px 0;\n  vertical-align: top;\n  cursor: pointer;\n  color: #FFF;\n  background-color: #4d90fe;\n  transition: all .2s ease-in-out;\n}\n\ndiv.equal:hover {\n  background-color: #307CF9;\n  -webkit-box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.2);\n  border-color: #1857BB;\n}\n\ndiv.equal:active {\n  font-weight: bold;\n}",
      "jsCode": "\"use strict\";\n\nvar input = document.getElementById('input'), // input/output button\n  number = document.querySelectorAll('.numbers div'), // number buttons\n  operator = document.querySelectorAll('.operators div'), // operator buttons\n  result = document.getElementById('result'), // equal button\n  clear = document.getElementById('clear'), // clear button\n  resultDisplayed = false; // flag to keep an eye on what output is displayed\n\n// adding click handlers to number buttons\nfor (var i = 0; i < number.length; i++) {\n  number[i].addEventListener(\"click\", function(e) {\n\n    // storing current input string and its last character in variables - used later\n    var currentString = input.innerHTML;\n    var lastChar = currentString[currentString.length - 1];\n\n    // if result is not diplayed, just keep adding\n    if (resultDisplayed === false) {\n      input.innerHTML += e.target.innerHTML;\n    } else if (resultDisplayed === true && lastChar === \"+\" || lastChar === \"-\" || lastChar === \"×\" || lastChar === \"÷\") {\n      // if result is currently displayed and user pressed an operator\n      // we need to keep on adding to the string for the next operation\n      resultDisplayed = false;\n      input.innerHTML += e.target.innerHTML;\n    } else {\n      // if result is currently displayed and user pressed a number\n      // we need to clear the input string and add the new input to start the new operation\n      resultDisplayed = false;\n      input.innerHTML = \"\";\n      input.innerHTML += e.target.innerHTML;\n    }\n\n  });\n}\n\n// adding click handlers to operator buttons\nfor (var i = 0; i < operator.length; i++) {\n  operator[i].addEventListener(\"click\", function(e) {\n\n    // storing current input string and its last character in variables - used later\n    var currentString = input.innerHTML;\n    var lastChar = currentString[currentString.length - 1];\n\n    // if the last character entered is an operator, replace it with the currently pressed one\n    if (lastChar === \"+\" || lastChar === \"-\" || lastChar === \"×\" || lastChar === \"÷\") {\n      var newString = currentString.substring(0, currentString.length - 1) + e.target.innerHTML;\n      input.innerHTML = newString;\n    } else if (currentString.length === 0) {\n      // if the first key pressed is an operator, don't do anything\n      console.log(\"Enter a number first\");\n    } else {\n      // else just add the operator pressed to the input\n      input.innerHTML += e.target.innerHTML;\n    }\n\n  });\n}\n\n// on click of 'equal' button\nresult.addEventListener(\"click\", function() {\n\n  // this is the string that we will be processing, e.g., -10+26+33-56*34/23\n  var inputString = input.innerHTML;\n\n  // forming an array of numbers, e.g., for the above string, it will be: numbers = [\"10\", \"26\", \"33\", \"56\", \"34\", \"23\"]\n  var numbers = inputString.split(/\\+|\\-|\\×|\\÷/g);\n\n  // forming an array of operators, for the above string, it will be: operators = [\"+\", \"+\", \"-\", \"*\", \"/\"]\n  // first we replace all the numbers and dots with an empty string and then split\n  var operators = inputString.replace(/[0-9]|\\./g, \"\").split(\"\");\n\n  var divide = operators.indexOf(\"÷\");\n  while (divide !== -1) {\n    numbers.splice(divide, 2, numbers[divide] / numbers[divide + 1]);\n    operators.splice(divide, 1);\n    divide = operators.indexOf(\"÷\");\n  }\n\n  var multiply = operators.indexOf(\"×\");\n  while (multiply !== -1) {\n    numbers.splice(multiply, 2, numbers[multiply] * numbers[multiply + 1]);\n    operators.splice(multiply, 1);\n    multiply = operators.indexOf(\"×\");\n  }\n\n  var subtract = operators.indexOf(\"-\");\n  while (subtract !== -1) {\n    numbers.splice(subtract, 2, numbers[subtract] - numbers[subtract + 1]);\n    operators.splice(subtract, 1);\n    subtract = operators.indexOf(\"-\");\n  }\n\n  var add = operators.indexOf(\"+\");\n  while (add !== -1) {\n    // using parseFloat is necessary, otherwise it will result in string concatenation :)\n    numbers.splice(add, 2, parseFloat(numbers[add]) + parseFloat(numbers[add + 1]));\n    operators.splice(add, 1);\n    add = operators.indexOf(\"+\");\n  }\n\n  input.innerHTML = numbers[0]; // displaying the output\n\n  resultDisplayed = true; // turning the flag if the result is displayed\n});\n\n// clearing the input on press of clear\nclear.addEventListener(\"click\", function() {\n  input.innerHTML = \"\";\n});"
    }

  ]